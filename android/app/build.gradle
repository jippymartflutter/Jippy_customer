plugins {
    id("com.android.application")
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "2.2.1"
}

android {
    namespace = "com.jippymart.customer"
    compileSdk = 36
    ndkVersion = "26.1.10909125"  // NDK r26+ for 16 KB page size support and plugin compatibility

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }
    
    // Suppress deprecation warnings for third-party libraries
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:-deprecation"
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    signingConfigs {
        release {
//            storeFile file("/Users/jippymart/StudioProjects/Jippy_customer/android/jippy_mart_keystore.jks")
            storeFile file("jippy_mart_keystore.jks")
            storePassword "Jippy@2024"
            keyAlias "jippy_mart"
            keyPassword "Jippy@2024"
        }
    }

    defaultConfig {
        applicationId = "com.jippymart.customer"
        minSdkVersion = flutter.minSdkVersion
        targetSdk = 36  // Android 14 - More stable for SDK compatibility
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        // ✅ Single NDK configuration with 16 KB page size support
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
        
        // ✅ Enable CMake build with 16 KB page size support
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_SUPPORT_FLEXIBLE_PAGE_SIZE=ON"
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            
            // ✅ PROVEN SIZE OPTIMIZATION
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            zipAlignEnabled true
        }
        
        debug {
            // Debug configuration inherits from defaultConfig
        }
    }

    // ✅ Add packaging options to prevent conflicts and support 16 KB alignment
    packagingOptions {
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libjsc.so'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/*.kotlin_module'
        
        // ✅ 16 KB native library alignment support
        jniLibs {
            useLegacyPackaging = false
        }
    }

    // ✅ Add splits configuration for proper APK generation
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            universalApk true
        }
    }
    
    // ✅ Enable CMake build for 16 KB page size support
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
            version "3.22.1"
        }
    }
}

dependencies {
    // ✅ Core Android dependencies
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.11.0'

    // ✅ Firebase dependencies
    implementation platform('com.google.firebase:firebase-bom:32.7.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'

    // ✅ Google Play Services
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    implementation 'com.google.android.gms:play-services-base:18.3.0'
    implementation 'com.google.android.gms:play-services-auth:20.7.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:18.0.2'
    implementation 'com.google.android.gms:play-services-wallet:19.4.0'
    implementation 'com.google.android.play:integrity:1.3.0'

    // ✅ Payment and third-party SDKs
    implementation 'io.card:android-sdk:5.5.1'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.7.0'
    
    // ✅ Explicitly exclude SafetyNet to prevent deprecation warnings
    configurations.all {
        exclude group: 'com.google.android.gms', module: 'play-services-safetynet'
    }
}

flutter {
    source = "../.."
}
